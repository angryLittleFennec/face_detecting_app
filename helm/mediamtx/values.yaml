# Default values for mediamtx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

image:
  repository: bluenviron/mediamtx
  tag: latest-ffmpeg

service:
  type: ClusterIP
  ports:
    rtsp: 8554
    http: 8888

persistence:
  enabled: true
  storageClass: yc-network-hdd  # Сетевой HDD
  size: 10Gi
  mountPath: /media/videos

# ingress:
#   enabled: true
#   className: nginx
#   annotations:
#     yandex.cloud/load-balancer-type: "external"
#     yandex.cloud/subnet-id: "e2lafcbevjq0o2rn6qdn"  # Ваш subnet-id
#   hosts:
#     - host: ""
#       paths:
#         - path: /mediamtx(/|$)(.*)
#           pathType: ImplementationSpecific
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/use-regex: "true"

ingress:
  enabled: true
  className: "nginx"
  annotations:
    yandex.cloud/load-balancer-type: "external"
    yandex.cloud/subnet-id: "e2lafcbevjq0o2rn6qdn"  # Ваш subnet-id
  hosts:
    - host: ""  # Доступ по IP (или укажите домен)
      paths:
        - path: /mediamtx
          pathType: Prefix
  tls: []


env:  # Environment variables (e.g., DB connection)
  - name: RTSP_PORT
    value: "8554"
  - name: HLS_PORT
    value: "8888"
  - name: MTX_PROTOCOLS
    value: tcp


# # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# imagePullSecrets: []
# # This is to override the chart name.
# nameOverride: ""
# fullnameOverride: ""

# #This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# # This is for setting Kubernetes Annotations to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
# podAnnotations: {}
# # This is for setting Kubernetes Labels to a Pod.
# # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#   type: ClusterIP
#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#   port: 80

# # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# #This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

# nodeSelector: {}

# tolerations: []

# affinity: {}
